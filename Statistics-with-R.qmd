---
title: "Statistics with R"
format: 
  docx:
    fig-width: 12
    fig-height: 8
    reference-doc: custom-reference-doc.docx
editor_options: 
  chunk_output_type: console
bibliography: references.bib
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, 
                      tidy = 'styler', 
                      comment = NA,
                      message = FALSE,
                      warning = FALSE)
```

# Introduction

The question of whether age and marital status affect an individual's decision to continue with their pregnancy is debatable. This project would use statistical analysis with the help of R to ascertain whether age and marital status affect an individual's decision to abort or continue with their pregnancy by determining the conceptions that took place within marriages or civil partnerships and how many of these conceptions led to an abortion and also by determining how conceptions changed over the period (1998 - 2020) under review both in and out of wedlock and within certain age categories.

The source of data used to carry out this analysis is the annual statistics on conceptions of residents of England and Wales which were released by the Office for National Statistics (ONS) on 14, April 2022. The following observations were made based on this data:

There were 817,515 conceptions by women between the ages of 15 to 44 in England and Wales in 2020 which dropped consistently from 876,934 conceptions in 2015. Women between the ages of 30 to 34 had the highest number of conceptions in 2020 with 248,528 conceptions while women below the age of 16 had the lowest number of conceptions in 2020 with 2,085. It was further observed that in 2020 women between the ages 30 and 34 had the lowest percentage of conceptions leading to abortion at 17.4% and this percentage continuously increased for younger women as teenagers below the age of 16 had the highest percentage at 61.8%. As of 2020, England had the majority of conceptions with 780,013 conceptions whiles Wales had 37,500. A further breakdown of England's 780,013 conceptions as of 2020 revealed that London had the highest conceptions with 150,871 conceptions and with North East having the lowest conceptions at 32,664.

# Data preparation and pre-processing

## Loading packages

The first phase of this analytical project is to import the data in R. In this case, we will import many packages that would enable us to import the data.

```{r}
#| label: import-package
#| warning: false

if(!require("install.load")){
  install.packages("install.load")
}

install.load::install_load(c("tidyverse", "janitor", "readxl", "openxlsx", "scales"))

theme_set(theme_bw()) # ggplot theme set to theme_bw()
```

## Downloading data into local directory

We used `download.file()` function to download the data from the [ONS](https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/birthsdeathsandmarriages/conceptionandfertilityrates/datasets/conceptionstatisticsenglandandwalesreferencetables/2020/conceptions2020workbook.xlsx) website.

```{r}
#| label: data-download
#| eval: false

link <- "https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/birthsdeathsandmarriages/conceptionandfertilityrates/datasets/conceptionstatisticsenglandandwalesreferencetables/2020/conceptions2020workbook.xlsx"

download.file(link, "conceptions2020.xlsx", mode = "wb")
```

## Resulting data set

We then import data from the workbook and select the most important variables that would be needed for analysis from the data.

```{r}
#| label: conception-data
#| 
conception <- read.xlsx("conceptions2020.xlsx", sheet = "1a", startRow = 8, sep.names = " ") %>% # Select variables needed for the analysis
  select(
c("Year of conception", "All ages Number of conceptions", "Under 16 Number of conceptions", "Under 18 Number of conceptions", "Under 20 Number of conceptions", "20 to 24 Number of conceptions", "25 to 29 Number of conceptions", "30 to 34 Number of conceptions", "35 to 39 Number of conceptions", "40 and over Number of conceptions"))

```

We can see the information about the data by using:

```{r}
conception %>% 
  head()

conception %>% 
  dim()

conception %>% 
  names()
```

The conceptions data is provided yearly and it runs from 1990 to 2020. The trend of conception by year is shown in @fig-trend-line for all ages and it can be seen that the rate of conception is gradually decreasing from 2010 till 2020. Also, conception for women under 18 is higher compared to women under 16.

```{r}
#| label: fig-trend-line
#| fig-cap: "Number of conceptions by year."

conception %>%
  ggplot(aes(x = `Year of conception`, y = `All ages Number of conceptions`)) +
  geom_line() +
  scale_y_continuous(labels = label_number(suffix = "K", scale = 1e-3)) +
  labs(y = "Number of conception", x = "Year")
```

The next step is to explore the rate of conceptions by age group per year. We need to reshape the data in order to achieve this.

```{r}
conception_reshape <- conception %>%
  pivot_longer(cols = -(1:2), names_to = "age_group", values_to = "conception") %>%
  mutate(age_group = factor(  str_trim(str_remove_all(age_group, "Number.*")),
  levels = c("Under 16", "Under 18", "Under 20", "20 to 24", "25 to 29", "30 to 34", "35 to 39", "40 and over"))) %>%
  select(-2)
```

The reshape data looks like this:

```{r}
conception_reshape %>% 
  head()
```

In @fig-conception-reshape, the number of conceptions per year grows for women in the 25 to 29 age group compared to other groups.

```{r}
#| label: fig-conception-reshape
#| fig-cap: "The trend analysis of number of conceptions by age group per year."

conception_reshape %>% 
  ggplot(aes(x = `Year of conception`, y = conception, col = age_group)) + geom_line() + labs(y = "Number of conceptions", col = "Age group") + scale_y_continuous(breaks = seq(0, 300000, 50000), labels = label_number(suffix = "K", scale = 1e-3))
```

# Teenage pregnancy

In this section, we will examine conceptions leading to maternity and those that are terminated by abortion for the teenagers in the teenage pregnancy data shown below:

```{r}
#| label: teenage-conceptions
#| 
teenage_conceptions <- read.xlsx("conceptions2020.xlsx", sheet = "1b", startRow = 8, sep.names = " ") %>% # Select variables needed for the analysis
  select(
    c("Year of conception", "Under 14 Number of conceptions leading to maternities", "Under 14 Number of conceptions terminated by abortion", "Age 14 Number of conceptions leading to maternities", "Age 14 Number of conceptions terminated by abortion", "Age 15 Number of conceptions leading to maternities", "Age 15 Number of conceptions terminated by abortion", "Under 16 Number of conceptions leading to maternities", "Under 16 Number of conceptions terminated by abortion", "Age 16 Number of conceptions leading to maternities", "Age 16 Number of conceptions terminated by abortion", "Age 17 Number of conceptions leading to maternities", "Age 17 Number of conceptions terminated by abortion", "Age 18 Number of conceptions leading to maternities", "Age 18 Number of conceptions terminated by abortion", "Age 19 Number of conceptions leading to maternities", "Age 19 Conceptions terminated by abortion")
  )
```

```{r}
teenage_conceptions %>% 
  head()
```

We can see the variables that are useful in the data by using:

```{r}
teenage_conceptions %>% 
  dim()

teenage_conceptions %>% 
  names()
```

The next step is to explore the rate of conceptions by age group per year. We need to reshape the data in order to achieve this.

```{r}
teenage_conceptions_reshape <- teenage_conceptions %>%
  pivot_longer(cols = -(1), names_to = "description", values_to = "statistics") %>%
  mutate(age_group = as_factor(str_trim(str_remove_all(description, "Number.*|Conceptions.*"))), conception = str_c("leading to ", str_extract(description, "abortion|maternities")), .after = 1) %>%
  select(-description)
```

The reshaped data looks like this:

```{r}
teenage_conceptions_reshape %>% 
  head()
```

From @fig-teenage-pregnancy below there is a decrease in conception in the last 20 years (2000-2020). Conception in teenagers is higher with kids in their late teens compare to those in mid teens. This explains that as teens approaches 18 years there is higher rate of conception. In addition, more teenagers in mid teens are more likely to abort compare to those in their late teens. Which mean as teenagers approach age 18 they are more willing to go through maternity.

```{r}
#| label: fig-teenage-pregnancy
#| fig-cap: "Conception by teenagers."

teenage_conceptions_reshape %>%
  ggplot(aes(x = `Year of conception`, y = statistics, fill = conception)) +
  geom_col(position = position_dodge()) +
  facet_wrap(~age_group) +
  labs(y = "Number of conceptions", x = "Year", fill = "Conception", caption = "Source: ONS") +
  scale_y_continuous(labels = label_number(suffix = "K", scale = 1e-3))

```

# Conception leading to maternities and abortion

## by marriage

```{r}
#| label: conception-marriage
#| 
conception_by_marriage <- read.xlsx("conceptions2020.xlsx", sheet = "2", startRow = 8, sep.names = " ") %>% # Select variables needed for the analysis
  select(
    c("Year of conception", "Under 18 Number of conceptions", "Under 18 Percentage of conceptions leading to abortion", "Under 20 Number of conceptions", "Under 20 Percentage of conceptions leading to abortion", "Age 20 to 24 Number of conceptions", "Age 20 to 24 Percentage of conceptions leading to abortion", "Age 25 to 29 Number of conceptions", "Age 25 to 29 Percentage of conceptions leading to abortion", "Age 30 to 34 Number of conceptions", "Age 30 to 34 Percentage of conceptions leading to abortion", "Age 35 to 39 Number of conceptions", "Age 35 to 39 Percentage of conceptions leading to abortion", "Age 40 and over Number of conceptions", "Age 40 and over Percentage of conceptions leading to abortion")
    )
```

We can see the information about variables that are useful in the data by using:

```{r}
conception_by_marriage %>% 
  dim()

conception_by_marriage %>% 
  names()
```

The reshape data looks like this:

```{r}
conception_by_marriage_maternity_abortion <- function() {
  conception_by_marriage <- conception_by_marriage %>%
    clean_names()

  maternity_abortion <- conception_by_marriage %>%
    mutate(
      under_18_number_of_conceptions_leading_to_abortion = under_18_number_of_conceptions * under_18_percentage_of_conceptions_leading_to_abortion / 100,
      under_18_number_of_conceptions_leading_to_maternity = under_18_number_of_conceptions - under_18_number_of_conceptions_leading_to_abortion,
      under_20_number_of_conceptions_leading_to_abortion = under_20_number_of_conceptions * under_20_percentage_of_conceptions_leading_to_abortion / 100,
      under_20_number_of_conceptions_leading_to_maternity = under_20_number_of_conceptions - under_20_number_of_conceptions_leading_to_abortion,
      age_20_to_24_number_of_conceptions_leading_to_abortion = age_20_to_24_number_of_conceptions * age_20_to_24_percentage_of_conceptions_leading_to_abortion / 100,
      age_20_to_24_number_of_conceptions_leading_to_maternity = age_20_to_24_number_of_conceptions - age_20_to_24_number_of_conceptions_leading_to_abortion,
      age_25_to_29_number_of_conceptions_leading_to_abortion = age_25_to_29_number_of_conceptions * age_25_to_29_percentage_of_conceptions_leading_to_abortion / 100,
      age_25_to_29_number_of_conceptions_leading_to_maternity = age_25_to_29_number_of_conceptions - age_25_to_29_number_of_conceptions_leading_to_abortion,
      age_30_to_34_number_of_conceptions_leading_to_abortion = age_30_to_34_number_of_conceptions * age_30_to_34_percentage_of_conceptions_leading_to_abortion / 100,
      age_30_to_34_number_of_conceptions_leading_to_maternity = age_30_to_34_number_of_conceptions - age_30_to_34_number_of_conceptions_leading_to_abortion,
      age_35_to_39_number_of_conceptions_leading_to_abortion = age_35_to_39_number_of_conceptions * age_35_to_39_percentage_of_conceptions_leading_to_abortion / 100,
      age_35_to_39_number_of_conceptions_leading_to_maternity = age_35_to_39_number_of_conceptions - age_35_to_39_number_of_conceptions_leading_to_abortion,
      age_40_and_over_number_of_conceptions_leading_to_abortion = age_40_and_over_number_of_conceptions * age_40_and_over_percentage_of_conceptions_leading_to_abortion / 100,
      age_40_and_over_number_of_conceptions_leading_to_maternity = age_40_and_over_number_of_conceptions - age_40_and_over_number_of_conceptions_leading_to_abortion
    )

  maternity_abortion %>%
    mutate(across(.cols = everything(), ~ round(.))) %>%
    select(-c(2:15)) %>%
    mutate(
      marital_status = "within marriage or civil partnership"
    )
}

```

```{r}
conception_by_marriage_maternity_abortion() %>% 
  head()
```

The columns in the data then look like this:

```{r}
conception_by_marriage_maternity_abortion() %>% 
  names()
```

We need to reshape the data into $5$ variables that include `year of conception`, `age group`, `conception decision`, `statistics`, and `marital status`.

```{r}
conception_by_marriage <- conception_by_marriage_maternity_abortion() %>%
  pivot_longer(cols = -c(1, 16), names_to = "description", values_to = "statistics") %>%
  mutate(
    age_group = str_trim(str_remove_all(description, "_number.*|age_")) %>% str_replace_all("_", " "),
    conception_decision = str_extract(description, "leading_to_abortion|leading_to_maternity") %>% 
      str_replace_all("_", " "), .after = 1
    ) %>%
  select(-description) %>%
  relocate(statistics, .before = marital_status)
```

## Conceptions outside marriage or civil partnership

```{r}
#| label: conception-outside-marriage
#| 
conception_outside_marriage <- read.xlsx("conceptions2020.xlsx", sheet = "3", startRow = 9, sep.names = " ") %>% # Select variables needed for the analysis
  select(
    c("Year of conception", "Under 16 Number of conceptions", "Age under 16 Percentage of conceptions leading to abortion",
      "Age under 18 Number of conceptions", "Age under 18 Percentage of conceptions leading to abortion", "Age under 20 Number of conceptions", "Age under 20 Percentage of conceptions leading to abortion", "Age 20 to 24 Number of conceptions", "Age 20 to 24 Percentage of conceptions leading to abortion", "Age 25 to 29 Number of conceptions", "Age 25 to 29 Percentage of conceptions leading to abortion", "Age 30 to 34 Number of conceptions", "Age 30 to 34 Percentage of conceptions leading to abortion", "Age 35 to 39 Number of conceptions", "Age 35 to 39 Percentage of conceptions leading to abortion", "Age 40 and over Number of conceptions", "Age 40 and over Percentage of conceptions leading to abortion")
    )
```

We can see the information about the variables that are useful in the data by using:

```{r}
conception_outside_marriage  %>% 
  dim()

conception_outside_marriage  %>% 
  names()
```

The reshape data looks like this:

```{r}
conception_outsidemarriage_maternity_abortion <- function() {
  conception_outside_marriage <- conception_outside_marriage %>%
    clean_names()

  conception_outside_marriage <- conception_outside_marriage %>%
    mutate(
      under_16_number_of_conceptions_leading_to_abortion = under_16_number_of_conceptions * age_under_16_percentage_of_conceptions_leading_to_abortion / 100,
      under_16_number_of_conceptions_leading_to_maternity = under_16_number_of_conceptions - under_16_number_of_conceptions_leading_to_abortion,
      under_18_number_of_conceptions_leading_to_abortion = age_under_18_number_of_conceptions * age_under_18_percentage_of_conceptions_leading_to_abortion / 100,
      under_18_number_of_conceptions_leading_to_maternity = age_under_18_number_of_conceptions - under_18_number_of_conceptions_leading_to_abortion,
      under_20_number_of_conceptions_leading_to_abortion = age_under_20_number_of_conceptions * age_under_20_percentage_of_conceptions_leading_to_abortion / 100,
      under_20_number_of_conceptions_leading_to_maternity = age_under_20_number_of_conceptions - under_20_number_of_conceptions_leading_to_abortion,
      age_20_to_24_number_of_conceptions_leading_to_abortion = age_20_to_24_number_of_conceptions * age_20_to_24_percentage_of_conceptions_leading_to_abortion / 100,
      age_20_to_24_number_of_conceptions_leading_to_maternity = age_20_to_24_number_of_conceptions - age_20_to_24_number_of_conceptions_leading_to_abortion,
      age_25_to_29_number_of_conceptions_leading_to_abortion = age_25_to_29_number_of_conceptions * age_25_to_29_percentage_of_conceptions_leading_to_abortion / 100,
      age_25_to_29_number_of_conceptions_leading_to_maternity = age_25_to_29_number_of_conceptions - age_25_to_29_number_of_conceptions_leading_to_abortion,
      age_30_to_34_number_of_conceptions_leading_to_abortion = age_30_to_34_number_of_conceptions * age_30_to_34_percentage_of_conceptions_leading_to_abortion / 100,
      age_30_to_34_number_of_conceptions_leading_to_maternity = age_30_to_34_number_of_conceptions - age_30_to_34_number_of_conceptions_leading_to_abortion,
      age_35_to_39_number_of_conceptions_leading_to_abortion = age_35_to_39_number_of_conceptions * age_35_to_39_percentage_of_conceptions_leading_to_abortion / 100,
      age_35_to_39_number_of_conceptions_leading_to_maternity = age_35_to_39_number_of_conceptions - age_35_to_39_number_of_conceptions_leading_to_abortion,
      age_40_and_over_number_of_conceptions_leading_to_abortion = age_40_and_over_number_of_conceptions * age_40_and_over_percentage_of_conceptions_leading_to_abortion / 100,
      age_40_and_over_number_of_conceptions_leading_to_maternity = age_40_and_over_number_of_conceptions - age_40_and_over_number_of_conceptions_leading_to_abortion
    )

  conception_outside_marriage %>%
    mutate(across(.cols = everything(), ~ round(.))) %>%
    select(-c(2:17)) %>%
    mutate(
      marital_status = "outside marriage or civil partnership"
    )
}

```

```{r}
conception_outsidemarriage_maternity_abortion() %>%  
  head()
```

The columns in the data then look like this:

```{r}
conception_outsidemarriage_maternity_abortion() %>% 
  glimpse()
```

We need to reshape `conception_outsidemarriage_maternity_abortion` dataframe into $5$ variables that include `year of conception`, `age group`, `conception decision`, `statistics`, and `marital status`.

```{r}
conception_not_by_marriage <- conception_outsidemarriage_maternity_abortion() %>%
  pivot_longer(cols = -c(1, 18), names_to = "description", values_to = "statistics") %>%
  mutate(
    age_group = str_remove_all(description, "_number.*|age_") %>% str_replace_all("_", " ") %>% str_trim(), 
    conception_decision = str_extract(description, "leading_to_abortion|leading_to_maternity") %>% str_replace_all("_", " ") %>% as.factor(), .after = 1) %>%
  select(-description) %>%
  relocate(statistics, .before = marital_status)
```

Now that we have the data for both conceptions leading to maternity and abortion by marriage and out of marriage, we then need to combine the data.

```{r}
conception_data <- conception_by_marriage %>%
  rbind(conception_not_by_marriage) %>%
  mutate(
    age_group = factor(age_group, levels = c("under 16", "under 18", "under 20", "20 to 24", "25 to 29", "30 to 34", "35 to 39", "40 and over")),
    marital_status  = factor(marital_status),
    conception_decision = factor(conception_decision)
    )

conception_data %>%
  glimpse()
```

# Data analysis

## Graphical analysis of conception decision by age group and marital status

### Which of the conceptions took place within marriage or civil partnerships and how many conceptions lead to an abortion?

```{r}
conception_decision <- conception_data %>% 
  group_by(marital_status, conception_decision) %>% 
  summarise(total = sum(statistics)) %>% ungroup() %>% filter(marital_status != "outside marriage or civil partnership")

conception_decision
```

```{r}
#| label: fig-conception-by-marital-status
#| fig-cap: "Conception decision by marital status."
#| fig-width: 12
#| fig-height: 8
#| 
conception_data %>%
  ggplot(aes(x = year_of_conception, y = statistics, fill = conception_decision)) +
  geom_col(position = position_dodge()) +
  facet_wrap(~marital_status) +
  labs(y = "Number of conceptions", x = "Year", fill = "Conception", caption = "Source: ONS") +
  scale_y_continuous(labels = label_number(breaks = seq(0, 150000, 50000), suffix = "K", scale = 1e-3)) +
  theme(legend.position = "bottom")
```

The number of conceptions that lead to an abortion within marriage or civil partnerships is `r format(conception_decision[1, 3] %>% pull, scientific = FALSE)`

### How did conceptions change over this time period both in and out of wedlock and within certain age categories?

```{r}
#| label: fig-conception-by-age-marital-status-1
#| fig-cap: "Conception decision by age and marital status (Age under 16 to 24)."

conception_data %>%
  filter(age_group %in% c("under 16", "under 18", "under 20", "20 to 24")) %>%
  ggplot(aes(x = year_of_conception, y = statistics, fill = conception_decision)) +
  geom_col(position = position_dodge()) +
  facet_grid(marital_status ~ age_group) +
  labs(y = "Number of conceptions", x = "Year", fill = "Conception", caption = "Source: ONS") +
  scale_y_continuous(labels = label_number(breaks = seq(0, 150000, 50000), suffix = "K", scale = 1e-3)) +
  theme(legend.position = "bottom")
```

```{r}
#| label: fig-conception-by-age-marital-status-2
#| fig-cap: "Conception decision by age and marital status (Age 25 and above)."
conception_data %>%
  filter(age_group %in% c("25 to 29", "30 to 34", "35 to 39", "40 and over")) %>%
  ggplot(aes(x = year_of_conception, y = statistics, fill = conception_decision)) +
  geom_col(position = position_dodge()) +
  facet_grid(marital_status ~ age_group) +
  labs(y = "Number of conceptions", x = "Year", fill = "Conception", caption = "Source: ONS") +
  scale_y_continuous(labels = label_number(breaks = seq(0, 150000, 50000), suffix = "K", scale = 1e-3)) +
  theme(legend.position = "bottom")
```

# Statistical Modelling

This is a statistical method used to understand the relationship between different variables. It is often represented in a graph, and it examines how a dependent variable is affected by one or more independent variables [@cichosz2015].

This science of getting computers to learn and act like humans do, and improve their learning over time in autonomous fashion, by feeding them data and information in the form of observations and real-world interactions is called machine learning.

Different approaches to implementing machine learning (ML) techniques are available. Notable among these are supervised learning, unsupervised learning, semi-supervised learning, and reinforcement learning methods.

The supervised learning algorithms consist of a label and a set of features. The task is to learn a function that maps an input to an output based on an example of an input-to-output pair. A supervised learning algorithm analyses the training data and produces an inferred function for mapping test data or new input (X) to predict the output or label (Y).

The two examples of supervised learning techniques are classification and regression. The main difference between these two methods is that regression has the label of the data continuous while classification has the categorical label (or discrete). This work applied decision tree on `conception data` to predict whether whether conception will lead to maternity or abortion. The features are year of conception, age group, marital status and statistics (count of abortion or maternity) while the label is conception decision.

## One hot encoding

Before applying or fitting any model to the data numeric features in the datasets must be rescaled so they have a similar range of values. Rescaling prevents features from having an undue influence on model training simply because then have a larger range of numeric variables. Models such as Logistic, KNN, SVM, and neural network required a transformation of features to be centered and/or scaled before being used in such models [@ogundepo2023]. We, therefore, used the preProcess function in caret to transform features in the training set and applied it to the test set or future samples. We used the function argument `method = c('center', 'scale')` to do the transformation of each predictor. The 'predict' method for this class is then used to apply the processing to new samples [@kuhn2008].

```{r One_hot_encoding_1}

library(caret)
# Removing the class column on train data to be able to create a one hot encoding

conception_data_label <- conception_data %>% select(conception_decision)

conception_data_features <- conception_data %>% select(-conception_decision)


# `fullRank = T` to avoid dummmy trap

dummies <- dummyVars("~.", data = conception_data_features, fullRank = TRUE)

conception_data_features <- predict(dummies, newdata = conception_data_features)

# Convert to dataframe

conception_data_features <- as_tibble(conception_data_features)

```

## Model building

It is necessary when building supervised machine learning models to split our dataset into training and test data, the learning method should see only the training data to learn the relationship between the set of input (X) and label (Y). This learned information forms what is called a machine learning model. The caret function `createDataPartition` was used to create stratified random splits of the dataset. In this case, we used 80% of data for model training, and the remainder 20% was used for model evaluation or performance. The `functioncreateDataPartition` creates the random splits within each group or class so that the overall class distribution is preserved as well as possible[@kuhn2008].

The model built is then used to predict the label (Y) in test data by looking only the input (X) of test data. The predicted values of Y is then compared to the known label (Y) in the test dataset to evaluate the performance of the model.

```{r}

model_data <- conception_data_features %>% bind_cols(conception_data_label) %>% mutate(conception_decision = 
  make.names(conception_decision)
) %>% clean_names()


# Create the training and test datasets for the Cleveland dataset
  
split  <- sample(nrow(model_data), nrow(model_data) * 0.8)
  
train_conception_data <- model_data[split, ]
  
test_conception_data <- model_data[-split, ]

# Store X and Y for later use
  
x_train <-  train_conception_data %>% select(-conception_decision)

y_train <-  train_conception_data %>% select(conception_decision)


xy_train <- train_conception_data
  
x_test <- test_conception_data %>% 
  select(-conception_decision)
  
y_test <- test_conception_data %>% 
  select(conception_decision)
  
# evaluation metrics

# A function that generate data for class prediction probabilities and class prediction outcome

pred_data <- function(pred_probs){
  as_tibble(pred_probs) %>%
    mutate(
      # keep predicted probabilities for the positive class only
      prob = leading.to.maternity,
      class = names(.)[apply(., 1, which.max)]
    )
}


# Logloss metric for evaluating performance of classifier

logloss <- function(actual_class, pred_prob, eps = 1e-15) {
  yhat <- pmin(pmax(pred_prob, eps), 1 - eps)
  logloss <- -(mean(actual_class * log(yhat) + (1 - actual_class) * log(1 - yhat)))
  return(logloss)
}

# fct_int convert factor class levels (present/ absent) to integer 0/1

fct_int <- function (class_fct) {
  class_int =  as.numeric(as.character(fct_recode(class_fct, '0' = 'leading.to.abortion',  '1' = 'leading.to.maternity')))
  return(class_int)
}

# int_fct convert integer class (1/ 0) to factor class leading.to.maternity/leading.to.abortion

int_fct <- function (class_int) {
  class_fct = fct_recode(factor(class_int), 'leading.to.abortion' = '0',  'leading.to.maternity' = '1')
  return(class_fct)
}

# Converting y_test to class integer
  
y_test <- fct_int(y_test %>% pull())



# Building model

d.tree.model <- train(conception_decision ~ ., data = xy_train, method = "rpart", trControl = trainControl(method = "cv", number = 10, returnResamp = "all"))

d.tree_pred <- pred_data(pred_probs = predict(d.tree.model, x_test, type = "prob"))

d.tree_class <- fct_int(d.tree_pred$class)

```

# Confusion matrix with some other metrics

```{r confusion matrix}
cm <- confusionMatrix(factor(d.tree_class), factor(y_test), positive = '1')

cm$byClass[6] <- ModelMetrics::auc(y_test, d.tree_pred$prob)

cm$byClass[11] <- logloss(y_test, d.tree_pred$prob)

names(cm$byClass) = c("Sensitivity", "Specificity", "Pos Pred Value", "Neg Pred Value", "Precision", "AUC", "F1 score", "Prevalence", "Detection Rate", "Detection Prevalence", "logloss")

conf_matrix_cust_plot <- function(cm_input, model_pred, class_label1 = "Class Negative", class_label2 = "Class Positive", quadrant_col1 = "#3F97D0", quadrant_col2 = "#F7AD50", custom_title = "Confusion matrix", text_col = "black", round_dig = 2) {
  layout(matrix(c(1, 1, 2)))
  par(mar = c(2, 2, 2, 2))
  plot(c(100, 345), c(300, 450), type = "n", xlab = "", ylab = "", xaxt = "n", yaxt = "n")

# n is specified in plot to indicate no plotting
  title(custom_title, cex.main = 2)

  # Create the matrix visualisation using custom rectangles and text items on the chart
 rect(150, 430, 240, 370, col = '#009900')
 text(195, 435, class_label1, cex = 1.2)
 rect(250, 430, 340, 370, col = quadrant_col2)
 text(295, 435, class_label2, cex = 1.2)
  text(125, 370, "Predicted", cex = 1.3, srt = 90, font = 2)
  text(245, 450, "Actual", cex = 1.3, font = 2)
  rect(150, 305, 240, 365, col = quadrant_col2)
  rect(250, 305, 340, 365, col = '#ff0000')
  text(140, 400, class_label1, cex = 1.2, srt = 90)
  text(140, 335, class_label2, cex = 1.2, srt = 90)

# Add the results of the confusion matrix - as these will be saved to cm$table
  result <- as.numeric(cm$table)
  text(195, 400, result[1], cex = 1.6, font = 2, col = text_col)
  text(195, 335, result[2], cex = 1.6, font = 2, col = text_col)
  text(295, 400, result[3], cex = 1.6, font = 2, col = text_col)
  text(295, 335, result[4], cex = 1.6, font = 2, col = text_col)

# Add in other confusion matrix statistics
  plot(c(100, 0), c(100, 0), type = "n", xlab = "", ylab = "",    main = "Model performance metrics", xaxt = "n", yaxt = "n")
  text(10, 85, names(cm$byClass[1]), cex = 1.6, font = 2)
  text(10, 70, round(as.numeric(cm$byClass[1]), round_dig), cex = 1.2)
  text(30, 85, names(cm$byClass[2]), cex = 1.6, font = 2)
  text(30, 70, round(as.numeric(cm$byClass[2]), round_dig), cex = 1.2)
  text(50, 85, names(cm$byClass[5]), cex = 1.6, font = 2)
  text(50, 70, round(as.numeric(cm$byClass[5]), round_dig), cex = 1.2)
  text(65, 85, names(cm$byClass[6]), cex = 1.6, font = 2)
  text(65, 70, round(as.numeric(cm$byClass[6]), round_dig), cex = 1.2)
  text(86, 85, names(cm$byClass[11]), cex = 1.6, font = 2)
  text(86, 70, round(as.numeric(cm$byClass[11]), round_dig), cex = 1.2)

  # add in the accuracy information
  text(30, 35, names(cm$overall[1]), cex = 1.5, font = 2)
  text(30, 20, round(as.numeric(cm$overall[1]), 4), cex = 1.4)
  text(70, 35, names(cm$byClass[7]), cex = 1.5, font = 2)
  text(70, 20, round(as.numeric(cm$byClass[7]), round_dig), cex = 1.4)
}


conf_matrix_cust_plot(cm,
  class_label1 = "abortion",
  class_label2 = "maternity",
  quadrant_col1 = "#009900",
  quadrant_col2 = "#ec008e",
  custom_title = "",
  round_dig = 3
)

```

Based on the analysis of conception decision by age group and marital status, it was observed that .....................

Based on the analysis on how conceptions changed over this time period both in and out of wedlock and within certain age categories, it was observed that .....................

# Conclusion

# Reflection section

This section would discuss this analytical project at a metal level by stating the motivation, challenges, learning points and justifications of the techniques and methods used during in carrying out the analysis.

# Motivation

The Research question of whether age and marital status affect an individual's decision to continue with their pregnancy is an extremely interesting topic that motivated me to carry out further analysis to gather insight.

# Challenges

One of the challenges I encountered was the difficulty in analyzing the ONS annual statistics on conceptions of residents of England and Wales dataset, as this dataset contained a huge amount of data that was messy and needed to be cleaned and processed before being put to use for the analysis. In addition, although the use of Regression analysis showed a correlation between the dependent variable (abortion) and the independent variables (age and marital status), it did not necessarily prove that a change in age and marital status affects the decision to abort or continue with a pregnancy and this posed a challenge.

The learning point is that cleaning data is a significant aspect of this analytical project because the quality of the data determines the accuracy of the calculations. Even with statistical methods/techniques and data cleansing methods, if the input data is inaccurate, the observations from the analysis will also be inaccurate.

# Learning points

Cleaning data is a significant aspect of this analytical project because the quality of the data determines the accuracy of the calculations. Even with statistical techniques and data cleansing methods, if the input data is inaccurate, the predictions from the analysis will also be inaccurate.

# Justification

In order to efficiently analyze the ONS annual statistics on conceptions of residents of England and Wales dataset, the application of R was used. The decision to use R to carry out the analysis in this project is due to the following reasons: R is open-source and does not require any fees or license to use. In addition, R offers many features and packages which are suitable for carrying out statistical analysis. Finally, R offers a host of packages that assisted in the conversion of the messy and unstructured dataset into a structured format for analysis. The use of visualizations and Regression analysis assisted in understanding the relationship between different variables and gaining insight.

# References
